@startuml
!include lib/C4_Container.puml

LAYOUT_TOP_DOWN
LAYOUT_WITH_LEGEND
LAYOUT_AS_SKETCH

title Container diagram for the Gradle Kotlin DSL

Person(dev, "Developer", "Developer using a Kotlin DSL based Gradle build")

System_Boundary(gradleBuildTool, "Gradle") {

    System_Ext(gradle, "Gradle Build Tool", "The Gradle Build Tool")

    System_Boundary(gradleKotlinDsl, "Gradle Kotlin DSL") {

        Container(provider, "Kotlin DSL Provider", "The core of the Gradle Kotlin DSL")
        Container(tapiBuilder, "IDE ToolingAPI Models", "Calculates script dependencies and error reporting for editors")
        Container(plugin, "`kotlin-dsl` Plugin", "Gradle Plugin to develop Kotlin-based projects that contribute build logic")

        Rel_Neighbor(tapiBuilder, provider, "Uses")
        Rel_Neighbor(plugin, provider, "Uses")
    }

    Rel(gradle, provider, "Uses", "Script compilation")
    Rel(gradle, plugin, "Uses", "e.g. in `buildSrc`")
}

System_Boundary(ide, "IDE") {

    System_Ext(editor, ".gradle.kts script editor", "e.g. in IntelliJ IDEA or Android Studio")

    Container(resolver, "Kotlin DSL Script Dependencies Resolver", "Loaded from IntelliJ Project Gradle version")

    Rel_Neighbor(editor, resolver, "Uses", "Embedded")
}

Boundary(kotlinTools, "Kotlin Toolchain") {

    System_Ext(kgp, "Kotlin Gradle Plugin", "The `org.jetbrains.kotlin.jvm` Gradle plugin")
    System_Ext(kotlinc, "Kotlin Compiler", "kotlinc")

    Rel_Neighbor(kgp, kotlinc, "Uses", "Daemon")
}

Rel(dev, gradle, "Uses", "Command Line")
Rel(dev, editor, "Uses", "GUI")

Rel(provider, kotlinc, "Uses", "Embedded")
Rel(plugin, kgp, "Applies")
Rel(resolver, tapiBuilder, "Uses", "TAPI")

Rel(ide, kotlinc, "Uses")

@enduml
